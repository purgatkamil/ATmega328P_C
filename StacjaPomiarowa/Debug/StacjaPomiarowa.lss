
StacjaPomiarowa.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  0000056c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000518  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  0000056c  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000059c  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000060  00000000  00000000  000005dc  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000940  00000000  00000000  0000063c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000737  00000000  00000000  00000f7c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000004df  00000000  00000000  000016b3  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000134  00000000  00000000  00001b94  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000435  00000000  00000000  00001cc8  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000026b  00000000  00000000  000020fd  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000050  00000000  00000000  00002368  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   8:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  10:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  14:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  18:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  1c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  20:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  24:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  28:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  2c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  30:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  34:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  38:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  3c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  40:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  44:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  48:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  4c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  50:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  54:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  58:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  5c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  60:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  64:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61
  74:	0e 94 e9 00 	call	0x1d2	; 0x1d2 <main>
  78:	0c 94 8a 02 	jmp	0x514	; 0x514 <_exit>

0000007c <__bad_interrupt>:
  7c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000080 <ADC_Init>:
}

void Display(int *mode){
	
	
}
  80:	cf 93       	push	r28
  82:	df 93       	push	r29
  84:	cd b7       	in	r28, 0x3d	; 61
  86:	de b7       	in	r29, 0x3e	; 62
  88:	8c e7       	ldi	r24, 0x7C	; 124
  8a:	90 e0       	ldi	r25, 0x00	; 0
  8c:	20 e4       	ldi	r18, 0x40	; 64
  8e:	fc 01       	movw	r30, r24
  90:	20 83       	st	Z, r18
  92:	8a e7       	ldi	r24, 0x7A	; 122
  94:	90 e0       	ldi	r25, 0x00	; 0
  96:	27 e8       	ldi	r18, 0x87	; 135
  98:	fc 01       	movw	r30, r24
  9a:	20 83       	st	Z, r18
  9c:	00 00       	nop
  9e:	df 91       	pop	r29
  a0:	cf 91       	pop	r28
  a2:	08 95       	ret

000000a4 <SendCommand>:
  a4:	cf 93       	push	r28
  a6:	df 93       	push	r29
  a8:	00 d0       	rcall	.+0      	; 0xaa <SendCommand+0x6>
  aa:	00 d0       	rcall	.+0      	; 0xac <SendCommand+0x8>
  ac:	1f 92       	push	r1
  ae:	cd b7       	in	r28, 0x3d	; 61
  b0:	de b7       	in	r29, 0x3e	; 62
  b2:	8d 83       	std	Y+5, r24	; 0x05
  b4:	8a e2       	ldi	r24, 0x2A	; 42
  b6:	90 e0       	ldi	r25, 0x00	; 0
  b8:	2f e3       	ldi	r18, 0x3F	; 63
  ba:	fc 01       	movw	r30, r24
  bc:	20 83       	st	Z, r18
  be:	8b e2       	ldi	r24, 0x2B	; 43
  c0:	90 e0       	ldi	r25, 0x00	; 0
  c2:	2b e2       	ldi	r18, 0x2B	; 43
  c4:	30 e0       	ldi	r19, 0x00	; 0
  c6:	f9 01       	movw	r30, r18
  c8:	20 81       	ld	r18, Z
  ca:	2f 7d       	andi	r18, 0xDF	; 223
  cc:	fc 01       	movw	r30, r24
  ce:	20 83       	st	Z, r18
  d0:	8b e2       	ldi	r24, 0x2B	; 43
  d2:	90 e0       	ldi	r25, 0x00	; 0
  d4:	2b e2       	ldi	r18, 0x2B	; 43
  d6:	30 e0       	ldi	r19, 0x00	; 0
  d8:	f9 01       	movw	r30, r18
  da:	20 81       	ld	r18, Z
  dc:	20 61       	ori	r18, 0x10	; 16
  de:	fc 01       	movw	r30, r24
  e0:	20 83       	st	Z, r18
  e2:	8b e2       	ldi	r24, 0x2B	; 43
  e4:	90 e0       	ldi	r25, 0x00	; 0
  e6:	2b e2       	ldi	r18, 0x2B	; 43
  e8:	30 e0       	ldi	r19, 0x00	; 0
  ea:	f9 01       	movw	r30, r18
  ec:	20 81       	ld	r18, Z
  ee:	20 7f       	andi	r18, 0xF0	; 240
  f0:	3d 81       	ldd	r19, Y+5	; 0x05
  f2:	32 95       	swap	r19
  f4:	3f 70       	andi	r19, 0x0F	; 15
  f6:	23 2b       	or	r18, r19
  f8:	fc 01       	movw	r30, r24
  fa:	20 83       	st	Z, r18
  fc:	8b e2       	ldi	r24, 0x2B	; 43
  fe:	90 e0       	ldi	r25, 0x00	; 0
 100:	2b e2       	ldi	r18, 0x2B	; 43
 102:	30 e0       	ldi	r19, 0x00	; 0
 104:	f9 01       	movw	r30, r18
 106:	20 81       	ld	r18, Z
 108:	2f 7e       	andi	r18, 0xEF	; 239
 10a:	fc 01       	movw	r30, r24
 10c:	20 83       	st	Z, r18
 10e:	88 ea       	ldi	r24, 0xA8	; 168
 110:	91 e6       	ldi	r25, 0x61	; 97
 112:	9a 83       	std	Y+2, r25	; 0x02
 114:	89 83       	std	Y+1, r24	; 0x01
 116:	89 81       	ldd	r24, Y+1	; 0x01
 118:	9a 81       	ldd	r25, Y+2	; 0x02
 11a:	01 97       	sbiw	r24, 0x01	; 1
 11c:	f1 f7       	brne	.-4      	; 0x11a <SendCommand+0x76>
 11e:	9a 83       	std	Y+2, r25	; 0x02
 120:	89 83       	std	Y+1, r24	; 0x01
 122:	8b e2       	ldi	r24, 0x2B	; 43
 124:	90 e0       	ldi	r25, 0x00	; 0
 126:	2b e2       	ldi	r18, 0x2B	; 43
 128:	30 e0       	ldi	r19, 0x00	; 0
 12a:	f9 01       	movw	r30, r18
 12c:	20 81       	ld	r18, Z
 12e:	20 61       	ori	r18, 0x10	; 16
 130:	fc 01       	movw	r30, r24
 132:	20 83       	st	Z, r18
 134:	8b e2       	ldi	r24, 0x2B	; 43
 136:	90 e0       	ldi	r25, 0x00	; 0
 138:	2b e2       	ldi	r18, 0x2B	; 43
 13a:	30 e0       	ldi	r19, 0x00	; 0
 13c:	f9 01       	movw	r30, r18
 13e:	20 81       	ld	r18, Z
 140:	32 2f       	mov	r19, r18
 142:	30 7f       	andi	r19, 0xF0	; 240
 144:	2d 81       	ldd	r18, Y+5	; 0x05
 146:	2f 70       	andi	r18, 0x0F	; 15
 148:	23 2b       	or	r18, r19
 14a:	fc 01       	movw	r30, r24
 14c:	20 83       	st	Z, r18
 14e:	8b e2       	ldi	r24, 0x2B	; 43
 150:	90 e0       	ldi	r25, 0x00	; 0
 152:	2b e2       	ldi	r18, 0x2B	; 43
 154:	30 e0       	ldi	r19, 0x00	; 0
 156:	f9 01       	movw	r30, r18
 158:	20 81       	ld	r18, Z
 15a:	2f 7e       	andi	r18, 0xEF	; 239
 15c:	fc 01       	movw	r30, r24
 15e:	20 83       	st	Z, r18
 160:	88 ea       	ldi	r24, 0xA8	; 168
 162:	91 e6       	ldi	r25, 0x61	; 97
 164:	9c 83       	std	Y+4, r25	; 0x04
 166:	8b 83       	std	Y+3, r24	; 0x03
 168:	8b 81       	ldd	r24, Y+3	; 0x03
 16a:	9c 81       	ldd	r25, Y+4	; 0x04
 16c:	01 97       	sbiw	r24, 0x01	; 1
 16e:	f1 f7       	brne	.-4      	; 0x16c <SendCommand+0xc8>
 170:	9c 83       	std	Y+4, r25	; 0x04
 172:	8b 83       	std	Y+3, r24	; 0x03
 174:	8b e2       	ldi	r24, 0x2B	; 43
 176:	90 e0       	ldi	r25, 0x00	; 0
 178:	2b e2       	ldi	r18, 0x2B	; 43
 17a:	30 e0       	ldi	r19, 0x00	; 0
 17c:	f9 01       	movw	r30, r18
 17e:	20 81       	ld	r18, Z
 180:	20 61       	ori	r18, 0x10	; 16
 182:	fc 01       	movw	r30, r24
 184:	20 83       	st	Z, r18
 186:	00 00       	nop
 188:	0f 90       	pop	r0
 18a:	0f 90       	pop	r0
 18c:	0f 90       	pop	r0
 18e:	0f 90       	pop	r0
 190:	0f 90       	pop	r0
 192:	df 91       	pop	r29
 194:	cf 91       	pop	r28
 196:	08 95       	ret

00000198 <LCD_Init>:
 198:	cf 93       	push	r28
 19a:	df 93       	push	r29
 19c:	cd b7       	in	r28, 0x3d	; 61
 19e:	de b7       	in	r29, 0x3e	; 62
 1a0:	83 e3       	ldi	r24, 0x33	; 51
 1a2:	0e 94 52 00 	call	0xa4	; 0xa4 <SendCommand>
 1a6:	82 e3       	ldi	r24, 0x32	; 50
 1a8:	0e 94 52 00 	call	0xa4	; 0xa4 <SendCommand>
 1ac:	88 e2       	ldi	r24, 0x28	; 40
 1ae:	0e 94 52 00 	call	0xa4	; 0xa4 <SendCommand>
 1b2:	88 e0       	ldi	r24, 0x08	; 8
 1b4:	0e 94 52 00 	call	0xa4	; 0xa4 <SendCommand>
 1b8:	81 e0       	ldi	r24, 0x01	; 1
 1ba:	0e 94 52 00 	call	0xa4	; 0xa4 <SendCommand>
 1be:	86 e0       	ldi	r24, 0x06	; 6
 1c0:	0e 94 52 00 	call	0xa4	; 0xa4 <SendCommand>
 1c4:	8f e0       	ldi	r24, 0x0F	; 15
 1c6:	0e 94 52 00 	call	0xa4	; 0xa4 <SendCommand>
 1ca:	00 00       	nop
 1cc:	df 91       	pop	r29
 1ce:	cf 91       	pop	r28
 1d0:	08 95       	ret

000001d2 <main>:

int main(void)
{
 1d2:	cf 93       	push	r28
 1d4:	df 93       	push	r29
 1d6:	cd b7       	in	r28, 0x3d	; 61
 1d8:	de b7       	in	r29, 0x3e	; 62
 1da:	60 97       	sbiw	r28, 0x10	; 16
 1dc:	0f b6       	in	r0, 0x3f	; 63
 1de:	f8 94       	cli
 1e0:	de bf       	out	0x3e, r29	; 62
 1e2:	0f be       	out	0x3f, r0	; 63
 1e4:	cd bf       	out	0x3d, r28	; 61
	LCD_Init();
 1e6:	0e 94 cc 00 	call	0x198	; 0x198 <LCD_Init>
	ADC_Init();
 1ea:	0e 94 40 00 	call	0x80	; 0x80 <ADC_Init>
	
	int DisplayMode = 0;
 1ee:	1a 82       	std	Y+2, r1	; 0x02
 1f0:	19 82       	std	Y+1, r1	; 0x01
	
	
	
    while (1) {	
		SendCommand(0x01);				//Clearing LCD
 1f2:	81 e0       	ldi	r24, 0x01	; 1
 1f4:	0e 94 52 00 	call	0xa4	; 0xa4 <SendCommand>
 1f8:	80 e0       	ldi	r24, 0x00	; 0
 1fa:	90 e0       	ldi	r25, 0x00	; 0
 1fc:	a8 ec       	ldi	r26, 0xC8	; 200
 1fe:	b2 e4       	ldi	r27, 0x42	; 66
 200:	8b 83       	std	Y+3, r24	; 0x03
 202:	9c 83       	std	Y+4, r25	; 0x04
 204:	ad 83       	std	Y+5, r26	; 0x05
 206:	be 83       	std	Y+6, r27	; 0x06

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
 208:	20 e0       	ldi	r18, 0x00	; 0
 20a:	30 e0       	ldi	r19, 0x00	; 0
 20c:	4a e7       	ldi	r20, 0x7A	; 122
 20e:	55 e4       	ldi	r21, 0x45	; 69
 210:	6b 81       	ldd	r22, Y+3	; 0x03
 212:	7c 81       	ldd	r23, Y+4	; 0x04
 214:	8d 81       	ldd	r24, Y+5	; 0x05
 216:	9e 81       	ldd	r25, Y+6	; 0x06
 218:	0e 94 f5 01 	call	0x3ea	; 0x3ea <__mulsf3>
 21c:	dc 01       	movw	r26, r24
 21e:	cb 01       	movw	r24, r22
 220:	8f 83       	std	Y+7, r24	; 0x07
 222:	98 87       	std	Y+8, r25	; 0x08
 224:	a9 87       	std	Y+9, r26	; 0x09
 226:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
 228:	20 e0       	ldi	r18, 0x00	; 0
 22a:	30 e0       	ldi	r19, 0x00	; 0
 22c:	40 e8       	ldi	r20, 0x80	; 128
 22e:	5f e3       	ldi	r21, 0x3F	; 63
 230:	6f 81       	ldd	r22, Y+7	; 0x07
 232:	78 85       	ldd	r23, Y+8	; 0x08
 234:	89 85       	ldd	r24, Y+9	; 0x09
 236:	9a 85       	ldd	r25, Y+10	; 0x0a
 238:	0e 94 6f 01 	call	0x2de	; 0x2de <__cmpsf2>
 23c:	88 23       	and	r24, r24
 23e:	2c f4       	brge	.+10     	; 0x24a <main+0x78>
		__ticks = 1;
 240:	81 e0       	ldi	r24, 0x01	; 1
 242:	90 e0       	ldi	r25, 0x00	; 0
 244:	9c 87       	std	Y+12, r25	; 0x0c
 246:	8b 87       	std	Y+11, r24	; 0x0b
 248:	3f c0       	rjmp	.+126    	; 0x2c8 <main+0xf6>
	else if (__tmp > 65535)
 24a:	20 e0       	ldi	r18, 0x00	; 0
 24c:	3f ef       	ldi	r19, 0xFF	; 255
 24e:	4f e7       	ldi	r20, 0x7F	; 127
 250:	57 e4       	ldi	r21, 0x47	; 71
 252:	6f 81       	ldd	r22, Y+7	; 0x07
 254:	78 85       	ldd	r23, Y+8	; 0x08
 256:	89 85       	ldd	r24, Y+9	; 0x09
 258:	9a 85       	ldd	r25, Y+10	; 0x0a
 25a:	0e 94 f0 01 	call	0x3e0	; 0x3e0 <__gesf2>
 25e:	18 16       	cp	r1, r24
 260:	4c f5       	brge	.+82     	; 0x2b4 <main+0xe2>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
 262:	20 e0       	ldi	r18, 0x00	; 0
 264:	30 e0       	ldi	r19, 0x00	; 0
 266:	40 e2       	ldi	r20, 0x20	; 32
 268:	51 e4       	ldi	r21, 0x41	; 65
 26a:	6b 81       	ldd	r22, Y+3	; 0x03
 26c:	7c 81       	ldd	r23, Y+4	; 0x04
 26e:	8d 81       	ldd	r24, Y+5	; 0x05
 270:	9e 81       	ldd	r25, Y+6	; 0x06
 272:	0e 94 f5 01 	call	0x3ea	; 0x3ea <__mulsf3>
 276:	dc 01       	movw	r26, r24
 278:	cb 01       	movw	r24, r22
 27a:	bc 01       	movw	r22, r24
 27c:	cd 01       	movw	r24, r26
 27e:	0e 94 74 01 	call	0x2e8	; 0x2e8 <__fixunssfsi>
 282:	dc 01       	movw	r26, r24
 284:	cb 01       	movw	r24, r22
 286:	9c 87       	std	Y+12, r25	; 0x0c
 288:	8b 87       	std	Y+11, r24	; 0x0b
 28a:	0f c0       	rjmp	.+30     	; 0x2aa <main+0xd8>
 28c:	80 e9       	ldi	r24, 0x90	; 144
 28e:	91 e0       	ldi	r25, 0x01	; 1
 290:	9e 87       	std	Y+14, r25	; 0x0e
 292:	8d 87       	std	Y+13, r24	; 0x0d
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
 294:	8d 85       	ldd	r24, Y+13	; 0x0d
 296:	9e 85       	ldd	r25, Y+14	; 0x0e
 298:	01 97       	sbiw	r24, 0x01	; 1
 29a:	f1 f7       	brne	.-4      	; 0x298 <main+0xc6>
 29c:	9e 87       	std	Y+14, r25	; 0x0e
 29e:	8d 87       	std	Y+13, r24	; 0x0d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 2a0:	8b 85       	ldd	r24, Y+11	; 0x0b
 2a2:	9c 85       	ldd	r25, Y+12	; 0x0c
 2a4:	01 97       	sbiw	r24, 0x01	; 1
 2a6:	9c 87       	std	Y+12, r25	; 0x0c
 2a8:	8b 87       	std	Y+11, r24	; 0x0b
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 2aa:	8b 85       	ldd	r24, Y+11	; 0x0b
 2ac:	9c 85       	ldd	r25, Y+12	; 0x0c
 2ae:	89 2b       	or	r24, r25
 2b0:	69 f7       	brne	.-38     	; 0x28c <main+0xba>
 2b2:	14 c0       	rjmp	.+40     	; 0x2dc <main+0x10a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
 2b4:	6f 81       	ldd	r22, Y+7	; 0x07
 2b6:	78 85       	ldd	r23, Y+8	; 0x08
 2b8:	89 85       	ldd	r24, Y+9	; 0x09
 2ba:	9a 85       	ldd	r25, Y+10	; 0x0a
 2bc:	0e 94 74 01 	call	0x2e8	; 0x2e8 <__fixunssfsi>
 2c0:	dc 01       	movw	r26, r24
 2c2:	cb 01       	movw	r24, r22
 2c4:	9c 87       	std	Y+12, r25	; 0x0c
 2c6:	8b 87       	std	Y+11, r24	; 0x0b
 2c8:	8b 85       	ldd	r24, Y+11	; 0x0b
 2ca:	9c 85       	ldd	r25, Y+12	; 0x0c
 2cc:	98 8b       	std	Y+16, r25	; 0x10
 2ce:	8f 87       	std	Y+15, r24	; 0x0f
 2d0:	8f 85       	ldd	r24, Y+15	; 0x0f
 2d2:	98 89       	ldd	r25, Y+16	; 0x10
 2d4:	01 97       	sbiw	r24, 0x01	; 1
 2d6:	f1 f7       	brne	.-4      	; 0x2d4 <main+0x102>
 2d8:	98 8b       	std	Y+16, r25	; 0x10
 2da:	8f 87       	std	Y+15, r24	; 0x0f
		
		_delay_ms(100);		
		
    }
 2dc:	8a cf       	rjmp	.-236    	; 0x1f2 <main+0x20>

000002de <__cmpsf2>:
 2de:	0e 94 a3 01 	call	0x346	; 0x346 <__fp_cmp>
 2e2:	08 f4       	brcc	.+2      	; 0x2e6 <__cmpsf2+0x8>
 2e4:	81 e0       	ldi	r24, 0x01	; 1
 2e6:	08 95       	ret

000002e8 <__fixunssfsi>:
 2e8:	0e 94 cf 01 	call	0x39e	; 0x39e <__fp_splitA>
 2ec:	88 f0       	brcs	.+34     	; 0x310 <__fixunssfsi+0x28>
 2ee:	9f 57       	subi	r25, 0x7F	; 127
 2f0:	98 f0       	brcs	.+38     	; 0x318 <__fixunssfsi+0x30>
 2f2:	b9 2f       	mov	r27, r25
 2f4:	99 27       	eor	r25, r25
 2f6:	b7 51       	subi	r27, 0x17	; 23
 2f8:	b0 f0       	brcs	.+44     	; 0x326 <__fixunssfsi+0x3e>
 2fa:	e1 f0       	breq	.+56     	; 0x334 <__fixunssfsi+0x4c>
 2fc:	66 0f       	add	r22, r22
 2fe:	77 1f       	adc	r23, r23
 300:	88 1f       	adc	r24, r24
 302:	99 1f       	adc	r25, r25
 304:	1a f0       	brmi	.+6      	; 0x30c <__fixunssfsi+0x24>
 306:	ba 95       	dec	r27
 308:	c9 f7       	brne	.-14     	; 0x2fc <__fixunssfsi+0x14>
 30a:	14 c0       	rjmp	.+40     	; 0x334 <__fixunssfsi+0x4c>
 30c:	b1 30       	cpi	r27, 0x01	; 1
 30e:	91 f0       	breq	.+36     	; 0x334 <__fixunssfsi+0x4c>
 310:	0e 94 e9 01 	call	0x3d2	; 0x3d2 <__fp_zero>
 314:	b1 e0       	ldi	r27, 0x01	; 1
 316:	08 95       	ret
 318:	0c 94 e9 01 	jmp	0x3d2	; 0x3d2 <__fp_zero>
 31c:	67 2f       	mov	r22, r23
 31e:	78 2f       	mov	r23, r24
 320:	88 27       	eor	r24, r24
 322:	b8 5f       	subi	r27, 0xF8	; 248
 324:	39 f0       	breq	.+14     	; 0x334 <__fixunssfsi+0x4c>
 326:	b9 3f       	cpi	r27, 0xF9	; 249
 328:	cc f3       	brlt	.-14     	; 0x31c <__fixunssfsi+0x34>
 32a:	86 95       	lsr	r24
 32c:	77 95       	ror	r23
 32e:	67 95       	ror	r22
 330:	b3 95       	inc	r27
 332:	d9 f7       	brne	.-10     	; 0x32a <__fixunssfsi+0x42>
 334:	3e f4       	brtc	.+14     	; 0x344 <__fixunssfsi+0x5c>
 336:	90 95       	com	r25
 338:	80 95       	com	r24
 33a:	70 95       	com	r23
 33c:	61 95       	neg	r22
 33e:	7f 4f       	sbci	r23, 0xFF	; 255
 340:	8f 4f       	sbci	r24, 0xFF	; 255
 342:	9f 4f       	sbci	r25, 0xFF	; 255
 344:	08 95       	ret

00000346 <__fp_cmp>:
 346:	99 0f       	add	r25, r25
 348:	00 08       	sbc	r0, r0
 34a:	55 0f       	add	r21, r21
 34c:	aa 0b       	sbc	r26, r26
 34e:	e0 e8       	ldi	r30, 0x80	; 128
 350:	fe ef       	ldi	r31, 0xFE	; 254
 352:	16 16       	cp	r1, r22
 354:	17 06       	cpc	r1, r23
 356:	e8 07       	cpc	r30, r24
 358:	f9 07       	cpc	r31, r25
 35a:	c0 f0       	brcs	.+48     	; 0x38c <__fp_cmp+0x46>
 35c:	12 16       	cp	r1, r18
 35e:	13 06       	cpc	r1, r19
 360:	e4 07       	cpc	r30, r20
 362:	f5 07       	cpc	r31, r21
 364:	98 f0       	brcs	.+38     	; 0x38c <__fp_cmp+0x46>
 366:	62 1b       	sub	r22, r18
 368:	73 0b       	sbc	r23, r19
 36a:	84 0b       	sbc	r24, r20
 36c:	95 0b       	sbc	r25, r21
 36e:	39 f4       	brne	.+14     	; 0x37e <__fp_cmp+0x38>
 370:	0a 26       	eor	r0, r26
 372:	61 f0       	breq	.+24     	; 0x38c <__fp_cmp+0x46>
 374:	23 2b       	or	r18, r19
 376:	24 2b       	or	r18, r20
 378:	25 2b       	or	r18, r21
 37a:	21 f4       	brne	.+8      	; 0x384 <__fp_cmp+0x3e>
 37c:	08 95       	ret
 37e:	0a 26       	eor	r0, r26
 380:	09 f4       	brne	.+2      	; 0x384 <__fp_cmp+0x3e>
 382:	a1 40       	sbci	r26, 0x01	; 1
 384:	a6 95       	lsr	r26
 386:	8f ef       	ldi	r24, 0xFF	; 255
 388:	81 1d       	adc	r24, r1
 38a:	81 1d       	adc	r24, r1
 38c:	08 95       	ret

0000038e <__fp_split3>:
 38e:	57 fd       	sbrc	r21, 7
 390:	90 58       	subi	r25, 0x80	; 128
 392:	44 0f       	add	r20, r20
 394:	55 1f       	adc	r21, r21
 396:	59 f0       	breq	.+22     	; 0x3ae <__fp_splitA+0x10>
 398:	5f 3f       	cpi	r21, 0xFF	; 255
 39a:	71 f0       	breq	.+28     	; 0x3b8 <__fp_splitA+0x1a>
 39c:	47 95       	ror	r20

0000039e <__fp_splitA>:
 39e:	88 0f       	add	r24, r24
 3a0:	97 fb       	bst	r25, 7
 3a2:	99 1f       	adc	r25, r25
 3a4:	61 f0       	breq	.+24     	; 0x3be <__fp_splitA+0x20>
 3a6:	9f 3f       	cpi	r25, 0xFF	; 255
 3a8:	79 f0       	breq	.+30     	; 0x3c8 <__fp_splitA+0x2a>
 3aa:	87 95       	ror	r24
 3ac:	08 95       	ret
 3ae:	12 16       	cp	r1, r18
 3b0:	13 06       	cpc	r1, r19
 3b2:	14 06       	cpc	r1, r20
 3b4:	55 1f       	adc	r21, r21
 3b6:	f2 cf       	rjmp	.-28     	; 0x39c <__fp_split3+0xe>
 3b8:	46 95       	lsr	r20
 3ba:	f1 df       	rcall	.-30     	; 0x39e <__fp_splitA>
 3bc:	08 c0       	rjmp	.+16     	; 0x3ce <__fp_splitA+0x30>
 3be:	16 16       	cp	r1, r22
 3c0:	17 06       	cpc	r1, r23
 3c2:	18 06       	cpc	r1, r24
 3c4:	99 1f       	adc	r25, r25
 3c6:	f1 cf       	rjmp	.-30     	; 0x3aa <__fp_splitA+0xc>
 3c8:	86 95       	lsr	r24
 3ca:	71 05       	cpc	r23, r1
 3cc:	61 05       	cpc	r22, r1
 3ce:	08 94       	sec
 3d0:	08 95       	ret

000003d2 <__fp_zero>:
 3d2:	e8 94       	clt

000003d4 <__fp_szero>:
 3d4:	bb 27       	eor	r27, r27
 3d6:	66 27       	eor	r22, r22
 3d8:	77 27       	eor	r23, r23
 3da:	cb 01       	movw	r24, r22
 3dc:	97 f9       	bld	r25, 7
 3de:	08 95       	ret

000003e0 <__gesf2>:
 3e0:	0e 94 a3 01 	call	0x346	; 0x346 <__fp_cmp>
 3e4:	08 f4       	brcc	.+2      	; 0x3e8 <__gesf2+0x8>
 3e6:	8f ef       	ldi	r24, 0xFF	; 255
 3e8:	08 95       	ret

000003ea <__mulsf3>:
 3ea:	0e 94 08 02 	call	0x410	; 0x410 <__mulsf3x>
 3ee:	0c 94 79 02 	jmp	0x4f2	; 0x4f2 <__fp_round>
 3f2:	0e 94 6b 02 	call	0x4d6	; 0x4d6 <__fp_pscA>
 3f6:	38 f0       	brcs	.+14     	; 0x406 <__EEPROM_REGION_LENGTH__+0x6>
 3f8:	0e 94 72 02 	call	0x4e4	; 0x4e4 <__fp_pscB>
 3fc:	20 f0       	brcs	.+8      	; 0x406 <__EEPROM_REGION_LENGTH__+0x6>
 3fe:	95 23       	and	r25, r21
 400:	11 f0       	breq	.+4      	; 0x406 <__EEPROM_REGION_LENGTH__+0x6>
 402:	0c 94 62 02 	jmp	0x4c4	; 0x4c4 <__fp_inf>
 406:	0c 94 68 02 	jmp	0x4d0	; 0x4d0 <__fp_nan>
 40a:	11 24       	eor	r1, r1
 40c:	0c 94 ea 01 	jmp	0x3d4	; 0x3d4 <__fp_szero>

00000410 <__mulsf3x>:
 410:	0e 94 c7 01 	call	0x38e	; 0x38e <__fp_split3>
 414:	70 f3       	brcs	.-36     	; 0x3f2 <__mulsf3+0x8>

00000416 <__mulsf3_pse>:
 416:	95 9f       	mul	r25, r21
 418:	c1 f3       	breq	.-16     	; 0x40a <__EEPROM_REGION_LENGTH__+0xa>
 41a:	95 0f       	add	r25, r21
 41c:	50 e0       	ldi	r21, 0x00	; 0
 41e:	55 1f       	adc	r21, r21
 420:	62 9f       	mul	r22, r18
 422:	f0 01       	movw	r30, r0
 424:	72 9f       	mul	r23, r18
 426:	bb 27       	eor	r27, r27
 428:	f0 0d       	add	r31, r0
 42a:	b1 1d       	adc	r27, r1
 42c:	63 9f       	mul	r22, r19
 42e:	aa 27       	eor	r26, r26
 430:	f0 0d       	add	r31, r0
 432:	b1 1d       	adc	r27, r1
 434:	aa 1f       	adc	r26, r26
 436:	64 9f       	mul	r22, r20
 438:	66 27       	eor	r22, r22
 43a:	b0 0d       	add	r27, r0
 43c:	a1 1d       	adc	r26, r1
 43e:	66 1f       	adc	r22, r22
 440:	82 9f       	mul	r24, r18
 442:	22 27       	eor	r18, r18
 444:	b0 0d       	add	r27, r0
 446:	a1 1d       	adc	r26, r1
 448:	62 1f       	adc	r22, r18
 44a:	73 9f       	mul	r23, r19
 44c:	b0 0d       	add	r27, r0
 44e:	a1 1d       	adc	r26, r1
 450:	62 1f       	adc	r22, r18
 452:	83 9f       	mul	r24, r19
 454:	a0 0d       	add	r26, r0
 456:	61 1d       	adc	r22, r1
 458:	22 1f       	adc	r18, r18
 45a:	74 9f       	mul	r23, r20
 45c:	33 27       	eor	r19, r19
 45e:	a0 0d       	add	r26, r0
 460:	61 1d       	adc	r22, r1
 462:	23 1f       	adc	r18, r19
 464:	84 9f       	mul	r24, r20
 466:	60 0d       	add	r22, r0
 468:	21 1d       	adc	r18, r1
 46a:	82 2f       	mov	r24, r18
 46c:	76 2f       	mov	r23, r22
 46e:	6a 2f       	mov	r22, r26
 470:	11 24       	eor	r1, r1
 472:	9f 57       	subi	r25, 0x7F	; 127
 474:	50 40       	sbci	r21, 0x00	; 0
 476:	9a f0       	brmi	.+38     	; 0x49e <__mulsf3_pse+0x88>
 478:	f1 f0       	breq	.+60     	; 0x4b6 <__mulsf3_pse+0xa0>
 47a:	88 23       	and	r24, r24
 47c:	4a f0       	brmi	.+18     	; 0x490 <__mulsf3_pse+0x7a>
 47e:	ee 0f       	add	r30, r30
 480:	ff 1f       	adc	r31, r31
 482:	bb 1f       	adc	r27, r27
 484:	66 1f       	adc	r22, r22
 486:	77 1f       	adc	r23, r23
 488:	88 1f       	adc	r24, r24
 48a:	91 50       	subi	r25, 0x01	; 1
 48c:	50 40       	sbci	r21, 0x00	; 0
 48e:	a9 f7       	brne	.-22     	; 0x47a <__mulsf3_pse+0x64>
 490:	9e 3f       	cpi	r25, 0xFE	; 254
 492:	51 05       	cpc	r21, r1
 494:	80 f0       	brcs	.+32     	; 0x4b6 <__mulsf3_pse+0xa0>
 496:	0c 94 62 02 	jmp	0x4c4	; 0x4c4 <__fp_inf>
 49a:	0c 94 ea 01 	jmp	0x3d4	; 0x3d4 <__fp_szero>
 49e:	5f 3f       	cpi	r21, 0xFF	; 255
 4a0:	e4 f3       	brlt	.-8      	; 0x49a <__mulsf3_pse+0x84>
 4a2:	98 3e       	cpi	r25, 0xE8	; 232
 4a4:	d4 f3       	brlt	.-12     	; 0x49a <__mulsf3_pse+0x84>
 4a6:	86 95       	lsr	r24
 4a8:	77 95       	ror	r23
 4aa:	67 95       	ror	r22
 4ac:	b7 95       	ror	r27
 4ae:	f7 95       	ror	r31
 4b0:	e7 95       	ror	r30
 4b2:	9f 5f       	subi	r25, 0xFF	; 255
 4b4:	c1 f7       	brne	.-16     	; 0x4a6 <__mulsf3_pse+0x90>
 4b6:	fe 2b       	or	r31, r30
 4b8:	88 0f       	add	r24, r24
 4ba:	91 1d       	adc	r25, r1
 4bc:	96 95       	lsr	r25
 4be:	87 95       	ror	r24
 4c0:	97 f9       	bld	r25, 7
 4c2:	08 95       	ret

000004c4 <__fp_inf>:
 4c4:	97 f9       	bld	r25, 7
 4c6:	9f 67       	ori	r25, 0x7F	; 127
 4c8:	80 e8       	ldi	r24, 0x80	; 128
 4ca:	70 e0       	ldi	r23, 0x00	; 0
 4cc:	60 e0       	ldi	r22, 0x00	; 0
 4ce:	08 95       	ret

000004d0 <__fp_nan>:
 4d0:	9f ef       	ldi	r25, 0xFF	; 255
 4d2:	80 ec       	ldi	r24, 0xC0	; 192
 4d4:	08 95       	ret

000004d6 <__fp_pscA>:
 4d6:	00 24       	eor	r0, r0
 4d8:	0a 94       	dec	r0
 4da:	16 16       	cp	r1, r22
 4dc:	17 06       	cpc	r1, r23
 4de:	18 06       	cpc	r1, r24
 4e0:	09 06       	cpc	r0, r25
 4e2:	08 95       	ret

000004e4 <__fp_pscB>:
 4e4:	00 24       	eor	r0, r0
 4e6:	0a 94       	dec	r0
 4e8:	12 16       	cp	r1, r18
 4ea:	13 06       	cpc	r1, r19
 4ec:	14 06       	cpc	r1, r20
 4ee:	05 06       	cpc	r0, r21
 4f0:	08 95       	ret

000004f2 <__fp_round>:
 4f2:	09 2e       	mov	r0, r25
 4f4:	03 94       	inc	r0
 4f6:	00 0c       	add	r0, r0
 4f8:	11 f4       	brne	.+4      	; 0x4fe <__fp_round+0xc>
 4fa:	88 23       	and	r24, r24
 4fc:	52 f0       	brmi	.+20     	; 0x512 <__fp_round+0x20>
 4fe:	bb 0f       	add	r27, r27
 500:	40 f4       	brcc	.+16     	; 0x512 <__fp_round+0x20>
 502:	bf 2b       	or	r27, r31
 504:	11 f4       	brne	.+4      	; 0x50a <__fp_round+0x18>
 506:	60 ff       	sbrs	r22, 0
 508:	04 c0       	rjmp	.+8      	; 0x512 <__fp_round+0x20>
 50a:	6f 5f       	subi	r22, 0xFF	; 255
 50c:	7f 4f       	sbci	r23, 0xFF	; 255
 50e:	8f 4f       	sbci	r24, 0xFF	; 255
 510:	9f 4f       	sbci	r25, 0xFF	; 255
 512:	08 95       	ret

00000514 <_exit>:
 514:	f8 94       	cli

00000516 <__stop_program>:
 516:	ff cf       	rjmp	.-2      	; 0x516 <__stop_program>
