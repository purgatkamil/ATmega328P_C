
StacjaPomiarowa.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000860  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000080c  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  00000860  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000890  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000050  00000000  00000000  000008d0  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000901  00000000  00000000  00000920  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000074c  00000000  00000000  00001221  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000004a3  00000000  00000000  0000196d  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000f4  00000000  00000000  00001e10  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000003f8  00000000  00000000  00001f04  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000001dd  00000000  00000000  000022fc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000040  00000000  00000000  000024d9  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   8:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  10:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  14:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  18:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  1c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  20:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  24:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  28:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  2c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  30:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  34:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  38:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  3c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  40:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  44:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  48:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  4c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  50:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  54:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  58:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  5c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  60:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  64:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61
  74:	0e 94 bf 01 	call	0x37e	; 0x37e <main>
  78:	0c 94 04 04 	jmp	0x808	; 0x808 <_exit>

0000007c <__bad_interrupt>:
  7c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000080 <ADC_Init>:
	while(*strp != 0)
	{
		SendChar(*strp);
		strp++;
	}
}
  80:	cf 93       	push	r28
  82:	df 93       	push	r29
  84:	cd b7       	in	r28, 0x3d	; 61
  86:	de b7       	in	r29, 0x3e	; 62
  88:	8c e7       	ldi	r24, 0x7C	; 124
  8a:	90 e0       	ldi	r25, 0x00	; 0
  8c:	20 e4       	ldi	r18, 0x40	; 64
  8e:	fc 01       	movw	r30, r24
  90:	20 83       	st	Z, r18
  92:	8a e7       	ldi	r24, 0x7A	; 122
  94:	90 e0       	ldi	r25, 0x00	; 0
  96:	27 e8       	ldi	r18, 0x87	; 135
  98:	fc 01       	movw	r30, r24
  9a:	20 83       	st	Z, r18
  9c:	00 00       	nop
  9e:	df 91       	pop	r29
  a0:	cf 91       	pop	r28
  a2:	08 95       	ret

000000a4 <getADC>:
  a4:	cf 93       	push	r28
  a6:	df 93       	push	r29
  a8:	00 d0       	rcall	.+0      	; 0xaa <getADC+0x6>
  aa:	00 d0       	rcall	.+0      	; 0xac <getADC+0x8>
  ac:	1f 92       	push	r1
  ae:	cd b7       	in	r28, 0x3d	; 61
  b0:	de b7       	in	r29, 0x3e	; 62
  b2:	8d 83       	std	Y+5, r24	; 0x05
  b4:	19 82       	std	Y+1, r1	; 0x01
  b6:	1a 82       	std	Y+2, r1	; 0x02
  b8:	1b 82       	std	Y+3, r1	; 0x03
  ba:	1c 82       	std	Y+4, r1	; 0x04
  bc:	8c e7       	ldi	r24, 0x7C	; 124
  be:	90 e0       	ldi	r25, 0x00	; 0
  c0:	2c e7       	ldi	r18, 0x7C	; 124
  c2:	30 e0       	ldi	r19, 0x00	; 0
  c4:	f9 01       	movw	r30, r18
  c6:	30 81       	ld	r19, Z
  c8:	2d 81       	ldd	r18, Y+5	; 0x05
  ca:	23 2b       	or	r18, r19
  cc:	fc 01       	movw	r30, r24
  ce:	20 83       	st	Z, r18
  d0:	8a e7       	ldi	r24, 0x7A	; 122
  d2:	90 e0       	ldi	r25, 0x00	; 0
  d4:	2a e7       	ldi	r18, 0x7A	; 122
  d6:	30 e0       	ldi	r19, 0x00	; 0
  d8:	f9 01       	movw	r30, r18
  da:	20 81       	ld	r18, Z
  dc:	20 64       	ori	r18, 0x40	; 64
  de:	fc 01       	movw	r30, r24
  e0:	20 83       	st	Z, r18
  e2:	00 00       	nop
  e4:	8a e7       	ldi	r24, 0x7A	; 122
  e6:	90 e0       	ldi	r25, 0x00	; 0
  e8:	fc 01       	movw	r30, r24
  ea:	80 81       	ld	r24, Z
  ec:	88 2f       	mov	r24, r24
  ee:	90 e0       	ldi	r25, 0x00	; 0
  f0:	80 71       	andi	r24, 0x10	; 16
  f2:	99 27       	eor	r25, r25
  f4:	89 2b       	or	r24, r25
  f6:	b1 f7       	brne	.-20     	; 0xe4 <getADC+0x40>
  f8:	8a e7       	ldi	r24, 0x7A	; 122
  fa:	90 e0       	ldi	r25, 0x00	; 0
  fc:	2a e7       	ldi	r18, 0x7A	; 122
  fe:	30 e0       	ldi	r19, 0x00	; 0
 100:	f9 01       	movw	r30, r18
 102:	20 81       	ld	r18, Z
 104:	20 61       	ori	r18, 0x10	; 16
 106:	fc 01       	movw	r30, r24
 108:	20 83       	st	Z, r18
 10a:	88 e7       	ldi	r24, 0x78	; 120
 10c:	90 e0       	ldi	r25, 0x00	; 0
 10e:	fc 01       	movw	r30, r24
 110:	80 81       	ld	r24, Z
 112:	88 2f       	mov	r24, r24
 114:	90 e0       	ldi	r25, 0x00	; 0
 116:	a0 e0       	ldi	r26, 0x00	; 0
 118:	b0 e0       	ldi	r27, 0x00	; 0
 11a:	89 83       	std	Y+1, r24	; 0x01
 11c:	9a 83       	std	Y+2, r25	; 0x02
 11e:	ab 83       	std	Y+3, r26	; 0x03
 120:	bc 83       	std	Y+4, r27	; 0x04
 122:	89 e7       	ldi	r24, 0x79	; 121
 124:	90 e0       	ldi	r25, 0x00	; 0
 126:	fc 01       	movw	r30, r24
 128:	80 81       	ld	r24, Z
 12a:	88 2f       	mov	r24, r24
 12c:	90 e0       	ldi	r25, 0x00	; 0
 12e:	98 2f       	mov	r25, r24
 130:	88 27       	eor	r24, r24
 132:	09 2e       	mov	r0, r25
 134:	00 0c       	add	r0, r0
 136:	aa 0b       	sbc	r26, r26
 138:	bb 0b       	sbc	r27, r27
 13a:	29 81       	ldd	r18, Y+1	; 0x01
 13c:	3a 81       	ldd	r19, Y+2	; 0x02
 13e:	4b 81       	ldd	r20, Y+3	; 0x03
 140:	5c 81       	ldd	r21, Y+4	; 0x04
 142:	82 2b       	or	r24, r18
 144:	93 2b       	or	r25, r19
 146:	a4 2b       	or	r26, r20
 148:	b5 2b       	or	r27, r21
 14a:	89 83       	std	Y+1, r24	; 0x01
 14c:	9a 83       	std	Y+2, r25	; 0x02
 14e:	ab 83       	std	Y+3, r26	; 0x03
 150:	bc 83       	std	Y+4, r27	; 0x04
 152:	89 81       	ldd	r24, Y+1	; 0x01
 154:	9a 81       	ldd	r25, Y+2	; 0x02
 156:	ab 81       	ldd	r26, Y+3	; 0x03
 158:	bc 81       	ldd	r27, Y+4	; 0x04
 15a:	bc 01       	movw	r22, r24
 15c:	cd 01       	movw	r24, r26
 15e:	0f 90       	pop	r0
 160:	0f 90       	pop	r0
 162:	0f 90       	pop	r0
 164:	0f 90       	pop	r0
 166:	0f 90       	pop	r0
 168:	df 91       	pop	r29
 16a:	cf 91       	pop	r28
 16c:	08 95       	ret

0000016e <SendChar>:
 16e:	cf 93       	push	r28
 170:	df 93       	push	r29
 172:	00 d0       	rcall	.+0      	; 0x174 <SendChar+0x6>
 174:	00 d0       	rcall	.+0      	; 0x176 <SendChar+0x8>
 176:	1f 92       	push	r1
 178:	cd b7       	in	r28, 0x3d	; 61
 17a:	de b7       	in	r29, 0x3e	; 62
 17c:	8d 83       	std	Y+5, r24	; 0x05
 17e:	8a e2       	ldi	r24, 0x2A	; 42
 180:	90 e0       	ldi	r25, 0x00	; 0
 182:	2f e3       	ldi	r18, 0x3F	; 63
 184:	fc 01       	movw	r30, r24
 186:	20 83       	st	Z, r18
 188:	8b e2       	ldi	r24, 0x2B	; 43
 18a:	90 e0       	ldi	r25, 0x00	; 0
 18c:	2b e2       	ldi	r18, 0x2B	; 43
 18e:	30 e0       	ldi	r19, 0x00	; 0
 190:	f9 01       	movw	r30, r18
 192:	20 81       	ld	r18, Z
 194:	20 63       	ori	r18, 0x30	; 48
 196:	fc 01       	movw	r30, r24
 198:	20 83       	st	Z, r18
 19a:	8b e2       	ldi	r24, 0x2B	; 43
 19c:	90 e0       	ldi	r25, 0x00	; 0
 19e:	2b e2       	ldi	r18, 0x2B	; 43
 1a0:	30 e0       	ldi	r19, 0x00	; 0
 1a2:	f9 01       	movw	r30, r18
 1a4:	20 81       	ld	r18, Z
 1a6:	20 7f       	andi	r18, 0xF0	; 240
 1a8:	3d 81       	ldd	r19, Y+5	; 0x05
 1aa:	32 95       	swap	r19
 1ac:	3f 70       	andi	r19, 0x0F	; 15
 1ae:	23 2b       	or	r18, r19
 1b0:	fc 01       	movw	r30, r24
 1b2:	20 83       	st	Z, r18
 1b4:	8b e2       	ldi	r24, 0x2B	; 43
 1b6:	90 e0       	ldi	r25, 0x00	; 0
 1b8:	2b e2       	ldi	r18, 0x2B	; 43
 1ba:	30 e0       	ldi	r19, 0x00	; 0
 1bc:	f9 01       	movw	r30, r18
 1be:	20 81       	ld	r18, Z
 1c0:	2f 7e       	andi	r18, 0xEF	; 239
 1c2:	fc 01       	movw	r30, r24
 1c4:	20 83       	st	Z, r18
 1c6:	88 e8       	ldi	r24, 0x88	; 136
 1c8:	93 e1       	ldi	r25, 0x13	; 19
 1ca:	9a 83       	std	Y+2, r25	; 0x02
 1cc:	89 83       	std	Y+1, r24	; 0x01
 1ce:	89 81       	ldd	r24, Y+1	; 0x01
 1d0:	9a 81       	ldd	r25, Y+2	; 0x02
 1d2:	01 97       	sbiw	r24, 0x01	; 1
 1d4:	f1 f7       	brne	.-4      	; 0x1d2 <SendChar+0x64>
 1d6:	9a 83       	std	Y+2, r25	; 0x02
 1d8:	89 83       	std	Y+1, r24	; 0x01
 1da:	8b e2       	ldi	r24, 0x2B	; 43
 1dc:	90 e0       	ldi	r25, 0x00	; 0
 1de:	2b e2       	ldi	r18, 0x2B	; 43
 1e0:	30 e0       	ldi	r19, 0x00	; 0
 1e2:	f9 01       	movw	r30, r18
 1e4:	20 81       	ld	r18, Z
 1e6:	20 61       	ori	r18, 0x10	; 16
 1e8:	fc 01       	movw	r30, r24
 1ea:	20 83       	st	Z, r18
 1ec:	8b e2       	ldi	r24, 0x2B	; 43
 1ee:	90 e0       	ldi	r25, 0x00	; 0
 1f0:	2b e2       	ldi	r18, 0x2B	; 43
 1f2:	30 e0       	ldi	r19, 0x00	; 0
 1f4:	f9 01       	movw	r30, r18
 1f6:	20 81       	ld	r18, Z
 1f8:	32 2f       	mov	r19, r18
 1fa:	30 7f       	andi	r19, 0xF0	; 240
 1fc:	2d 81       	ldd	r18, Y+5	; 0x05
 1fe:	2f 70       	andi	r18, 0x0F	; 15
 200:	23 2b       	or	r18, r19
 202:	fc 01       	movw	r30, r24
 204:	20 83       	st	Z, r18
 206:	8b e2       	ldi	r24, 0x2B	; 43
 208:	90 e0       	ldi	r25, 0x00	; 0
 20a:	2b e2       	ldi	r18, 0x2B	; 43
 20c:	30 e0       	ldi	r19, 0x00	; 0
 20e:	f9 01       	movw	r30, r18
 210:	20 81       	ld	r18, Z
 212:	2f 7e       	andi	r18, 0xEF	; 239
 214:	fc 01       	movw	r30, r24
 216:	20 83       	st	Z, r18
 218:	88 e8       	ldi	r24, 0x88	; 136
 21a:	93 e1       	ldi	r25, 0x13	; 19
 21c:	9c 83       	std	Y+4, r25	; 0x04
 21e:	8b 83       	std	Y+3, r24	; 0x03
 220:	8b 81       	ldd	r24, Y+3	; 0x03
 222:	9c 81       	ldd	r25, Y+4	; 0x04
 224:	01 97       	sbiw	r24, 0x01	; 1
 226:	f1 f7       	brne	.-4      	; 0x224 <SendChar+0xb6>
 228:	9c 83       	std	Y+4, r25	; 0x04
 22a:	8b 83       	std	Y+3, r24	; 0x03
 22c:	8b e2       	ldi	r24, 0x2B	; 43
 22e:	90 e0       	ldi	r25, 0x00	; 0
 230:	2b e2       	ldi	r18, 0x2B	; 43
 232:	30 e0       	ldi	r19, 0x00	; 0
 234:	f9 01       	movw	r30, r18
 236:	20 81       	ld	r18, Z
 238:	20 61       	ori	r18, 0x10	; 16
 23a:	fc 01       	movw	r30, r24
 23c:	20 83       	st	Z, r18
 23e:	00 00       	nop
 240:	0f 90       	pop	r0
 242:	0f 90       	pop	r0
 244:	0f 90       	pop	r0
 246:	0f 90       	pop	r0
 248:	0f 90       	pop	r0
 24a:	df 91       	pop	r29
 24c:	cf 91       	pop	r28
 24e:	08 95       	ret

00000250 <SendCommand>:
 250:	cf 93       	push	r28
 252:	df 93       	push	r29
 254:	00 d0       	rcall	.+0      	; 0x256 <SendCommand+0x6>
 256:	00 d0       	rcall	.+0      	; 0x258 <SendCommand+0x8>
 258:	1f 92       	push	r1
 25a:	cd b7       	in	r28, 0x3d	; 61
 25c:	de b7       	in	r29, 0x3e	; 62
 25e:	8d 83       	std	Y+5, r24	; 0x05
 260:	8a e2       	ldi	r24, 0x2A	; 42
 262:	90 e0       	ldi	r25, 0x00	; 0
 264:	2f e3       	ldi	r18, 0x3F	; 63
 266:	fc 01       	movw	r30, r24
 268:	20 83       	st	Z, r18
 26a:	8b e2       	ldi	r24, 0x2B	; 43
 26c:	90 e0       	ldi	r25, 0x00	; 0
 26e:	2b e2       	ldi	r18, 0x2B	; 43
 270:	30 e0       	ldi	r19, 0x00	; 0
 272:	f9 01       	movw	r30, r18
 274:	20 81       	ld	r18, Z
 276:	2f 7d       	andi	r18, 0xDF	; 223
 278:	fc 01       	movw	r30, r24
 27a:	20 83       	st	Z, r18
 27c:	8b e2       	ldi	r24, 0x2B	; 43
 27e:	90 e0       	ldi	r25, 0x00	; 0
 280:	2b e2       	ldi	r18, 0x2B	; 43
 282:	30 e0       	ldi	r19, 0x00	; 0
 284:	f9 01       	movw	r30, r18
 286:	20 81       	ld	r18, Z
 288:	20 61       	ori	r18, 0x10	; 16
 28a:	fc 01       	movw	r30, r24
 28c:	20 83       	st	Z, r18
 28e:	8b e2       	ldi	r24, 0x2B	; 43
 290:	90 e0       	ldi	r25, 0x00	; 0
 292:	2b e2       	ldi	r18, 0x2B	; 43
 294:	30 e0       	ldi	r19, 0x00	; 0
 296:	f9 01       	movw	r30, r18
 298:	20 81       	ld	r18, Z
 29a:	20 7f       	andi	r18, 0xF0	; 240
 29c:	3d 81       	ldd	r19, Y+5	; 0x05
 29e:	32 95       	swap	r19
 2a0:	3f 70       	andi	r19, 0x0F	; 15
 2a2:	23 2b       	or	r18, r19
 2a4:	fc 01       	movw	r30, r24
 2a6:	20 83       	st	Z, r18
 2a8:	8b e2       	ldi	r24, 0x2B	; 43
 2aa:	90 e0       	ldi	r25, 0x00	; 0
 2ac:	2b e2       	ldi	r18, 0x2B	; 43
 2ae:	30 e0       	ldi	r19, 0x00	; 0
 2b0:	f9 01       	movw	r30, r18
 2b2:	20 81       	ld	r18, Z
 2b4:	2f 7e       	andi	r18, 0xEF	; 239
 2b6:	fc 01       	movw	r30, r24
 2b8:	20 83       	st	Z, r18
 2ba:	88 ea       	ldi	r24, 0xA8	; 168
 2bc:	91 e6       	ldi	r25, 0x61	; 97
 2be:	9a 83       	std	Y+2, r25	; 0x02
 2c0:	89 83       	std	Y+1, r24	; 0x01
 2c2:	89 81       	ldd	r24, Y+1	; 0x01
 2c4:	9a 81       	ldd	r25, Y+2	; 0x02
 2c6:	01 97       	sbiw	r24, 0x01	; 1
 2c8:	f1 f7       	brne	.-4      	; 0x2c6 <SendCommand+0x76>
 2ca:	9a 83       	std	Y+2, r25	; 0x02
 2cc:	89 83       	std	Y+1, r24	; 0x01
 2ce:	8b e2       	ldi	r24, 0x2B	; 43
 2d0:	90 e0       	ldi	r25, 0x00	; 0
 2d2:	2b e2       	ldi	r18, 0x2B	; 43
 2d4:	30 e0       	ldi	r19, 0x00	; 0
 2d6:	f9 01       	movw	r30, r18
 2d8:	20 81       	ld	r18, Z
 2da:	20 61       	ori	r18, 0x10	; 16
 2dc:	fc 01       	movw	r30, r24
 2de:	20 83       	st	Z, r18
 2e0:	8b e2       	ldi	r24, 0x2B	; 43
 2e2:	90 e0       	ldi	r25, 0x00	; 0
 2e4:	2b e2       	ldi	r18, 0x2B	; 43
 2e6:	30 e0       	ldi	r19, 0x00	; 0
 2e8:	f9 01       	movw	r30, r18
 2ea:	20 81       	ld	r18, Z
 2ec:	32 2f       	mov	r19, r18
 2ee:	30 7f       	andi	r19, 0xF0	; 240
 2f0:	2d 81       	ldd	r18, Y+5	; 0x05
 2f2:	2f 70       	andi	r18, 0x0F	; 15
 2f4:	23 2b       	or	r18, r19
 2f6:	fc 01       	movw	r30, r24
 2f8:	20 83       	st	Z, r18
 2fa:	8b e2       	ldi	r24, 0x2B	; 43
 2fc:	90 e0       	ldi	r25, 0x00	; 0
 2fe:	2b e2       	ldi	r18, 0x2B	; 43
 300:	30 e0       	ldi	r19, 0x00	; 0
 302:	f9 01       	movw	r30, r18
 304:	20 81       	ld	r18, Z
 306:	2f 7e       	andi	r18, 0xEF	; 239
 308:	fc 01       	movw	r30, r24
 30a:	20 83       	st	Z, r18
 30c:	88 ea       	ldi	r24, 0xA8	; 168
 30e:	91 e6       	ldi	r25, 0x61	; 97
 310:	9c 83       	std	Y+4, r25	; 0x04
 312:	8b 83       	std	Y+3, r24	; 0x03
 314:	8b 81       	ldd	r24, Y+3	; 0x03
 316:	9c 81       	ldd	r25, Y+4	; 0x04
 318:	01 97       	sbiw	r24, 0x01	; 1
 31a:	f1 f7       	brne	.-4      	; 0x318 <SendCommand+0xc8>
 31c:	9c 83       	std	Y+4, r25	; 0x04
 31e:	8b 83       	std	Y+3, r24	; 0x03
 320:	8b e2       	ldi	r24, 0x2B	; 43
 322:	90 e0       	ldi	r25, 0x00	; 0
 324:	2b e2       	ldi	r18, 0x2B	; 43
 326:	30 e0       	ldi	r19, 0x00	; 0
 328:	f9 01       	movw	r30, r18
 32a:	20 81       	ld	r18, Z
 32c:	20 61       	ori	r18, 0x10	; 16
 32e:	fc 01       	movw	r30, r24
 330:	20 83       	st	Z, r18
 332:	00 00       	nop
 334:	0f 90       	pop	r0
 336:	0f 90       	pop	r0
 338:	0f 90       	pop	r0
 33a:	0f 90       	pop	r0
 33c:	0f 90       	pop	r0
 33e:	df 91       	pop	r29
 340:	cf 91       	pop	r28
 342:	08 95       	ret

00000344 <LCD_Init>:
 344:	cf 93       	push	r28
 346:	df 93       	push	r29
 348:	cd b7       	in	r28, 0x3d	; 61
 34a:	de b7       	in	r29, 0x3e	; 62
 34c:	83 e3       	ldi	r24, 0x33	; 51
 34e:	0e 94 28 01 	call	0x250	; 0x250 <SendCommand>
 352:	82 e3       	ldi	r24, 0x32	; 50
 354:	0e 94 28 01 	call	0x250	; 0x250 <SendCommand>
 358:	88 e2       	ldi	r24, 0x28	; 40
 35a:	0e 94 28 01 	call	0x250	; 0x250 <SendCommand>
 35e:	88 e0       	ldi	r24, 0x08	; 8
 360:	0e 94 28 01 	call	0x250	; 0x250 <SendCommand>
 364:	81 e0       	ldi	r24, 0x01	; 1
 366:	0e 94 28 01 	call	0x250	; 0x250 <SendCommand>
 36a:	86 e0       	ldi	r24, 0x06	; 6
 36c:	0e 94 28 01 	call	0x250	; 0x250 <SendCommand>
 370:	8f e0       	ldi	r24, 0x0F	; 15
 372:	0e 94 28 01 	call	0x250	; 0x250 <SendCommand>
 376:	00 00       	nop
 378:	df 91       	pop	r29
 37a:	cf 91       	pop	r28
 37c:	08 95       	ret

0000037e <main>:


int main(void)
{
 37e:	cf 93       	push	r28
 380:	df 93       	push	r29
 382:	cd b7       	in	r28, 0x3d	; 61
 384:	de b7       	in	r29, 0x3e	; 62
 386:	ea 97       	sbiw	r28, 0x3a	; 58
 388:	0f b6       	in	r0, 0x3f	; 63
 38a:	f8 94       	cli
 38c:	de bf       	out	0x3e, r29	; 62
 38e:	0f be       	out	0x3f, r0	; 63
 390:	cd bf       	out	0x3d, r28	; 61
	LCD_Init();
 392:	0e 94 a2 01 	call	0x344	; 0x344 <LCD_Init>
	ADC_Init();
 396:	0e 94 40 00 	call	0x80	; 0x80 <ADC_Init>
	char temperature[20];
	char temperature2[20];	
    while (1) {	
		SendCommand(0x01);
 39a:	81 e0       	ldi	r24, 0x01	; 1
 39c:	0e 94 28 01 	call	0x250	; 0x250 <SendCommand>
		long int result = getADC(0);
 3a0:	80 e0       	ldi	r24, 0x00	; 0
 3a2:	0e 94 52 00 	call	0xa4	; 0xa4 <getADC>
 3a6:	dc 01       	movw	r26, r24
 3a8:	cb 01       	movw	r24, r22
 3aa:	89 83       	std	Y+1, r24	; 0x01
 3ac:	9a 83       	std	Y+2, r25	; 0x02
 3ae:	ab 83       	std	Y+3, r26	; 0x03
 3b0:	bc 83       	std	Y+4, r27	; 0x04
		result = (result * 50000)/1024;
 3b2:	29 81       	ldd	r18, Y+1	; 0x01
 3b4:	3a 81       	ldd	r19, Y+2	; 0x02
 3b6:	4b 81       	ldd	r20, Y+3	; 0x03
 3b8:	5c 81       	ldd	r21, Y+4	; 0x04
 3ba:	80 e5       	ldi	r24, 0x50	; 80
 3bc:	93 ec       	ldi	r25, 0xC3	; 195
 3be:	dc 01       	movw	r26, r24
 3c0:	0e 94 9e 03 	call	0x73c	; 0x73c <__muluhisi3>
 3c4:	dc 01       	movw	r26, r24
 3c6:	cb 01       	movw	r24, r22
 3c8:	bb 23       	and	r27, r27
 3ca:	24 f4       	brge	.+8      	; 0x3d4 <main+0x56>
 3cc:	81 50       	subi	r24, 0x01	; 1
 3ce:	9c 4f       	sbci	r25, 0xFC	; 252
 3d0:	af 4f       	sbci	r26, 0xFF	; 255
 3d2:	bf 4f       	sbci	r27, 0xFF	; 255
 3d4:	07 2e       	mov	r0, r23
 3d6:	7a e0       	ldi	r23, 0x0A	; 10
 3d8:	b5 95       	asr	r27
 3da:	a7 95       	ror	r26
 3dc:	97 95       	ror	r25
 3de:	87 95       	ror	r24
 3e0:	7a 95       	dec	r23
 3e2:	d1 f7       	brne	.-12     	; 0x3d8 <main+0x5a>
 3e4:	70 2d       	mov	r23, r0
 3e6:	89 83       	std	Y+1, r24	; 0x01
 3e8:	9a 83       	std	Y+2, r25	; 0x02
 3ea:	ab 83       	std	Y+3, r26	; 0x03
 3ec:	bc 83       	std	Y+4, r27	; 0x04
		
		//itoa(copy_result, temperature2, 10);
		ltoa(result, temperature, 10);
 3ee:	ae 01       	movw	r20, r28
 3f0:	4d 5e       	subi	r20, 0xED	; 237
 3f2:	5f 4f       	sbci	r21, 0xFF	; 255
 3f4:	89 81       	ldd	r24, Y+1	; 0x01
 3f6:	9a 81       	ldd	r25, Y+2	; 0x02
 3f8:	ab 81       	ldd	r26, Y+3	; 0x03
 3fa:	bc 81       	ldd	r27, Y+4	; 0x04
 3fc:	2a e0       	ldi	r18, 0x0A	; 10
 3fe:	30 e0       	ldi	r19, 0x00	; 0
 400:	bc 01       	movw	r22, r24
 402:	cd 01       	movw	r24, r26
 404:	0e 94 b8 03 	call	0x770	; 0x770 <ltoa>
		SendChar(temperature[0]);
 408:	8b 89       	ldd	r24, Y+19	; 0x13
 40a:	0e 94 b7 00 	call	0x16e	; 0x16e <SendChar>
		SendChar(temperature[1]);
 40e:	8c 89       	ldd	r24, Y+20	; 0x14
 410:	0e 94 b7 00 	call	0x16e	; 0x16e <SendChar>
		SendChar(',');
 414:	8c e2       	ldi	r24, 0x2C	; 44
 416:	0e 94 b7 00 	call	0x16e	; 0x16e <SendChar>
		SendChar(temperature[2]);
 41a:	8d 89       	ldd	r24, Y+21	; 0x15
 41c:	0e 94 b7 00 	call	0x16e	; 0x16e <SendChar>
 420:	80 e0       	ldi	r24, 0x00	; 0
 422:	90 e0       	ldi	r25, 0x00	; 0
 424:	a8 ec       	ldi	r26, 0xC8	; 200
 426:	b2 e4       	ldi	r27, 0x42	; 66
 428:	8d 83       	std	Y+5, r24	; 0x05
 42a:	9e 83       	std	Y+6, r25	; 0x06
 42c:	af 83       	std	Y+7, r26	; 0x07
 42e:	b8 87       	std	Y+8, r27	; 0x08

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
 430:	20 e0       	ldi	r18, 0x00	; 0
 432:	30 e0       	ldi	r19, 0x00	; 0
 434:	4a e7       	ldi	r20, 0x7A	; 122
 436:	55 e4       	ldi	r21, 0x45	; 69
 438:	6d 81       	ldd	r22, Y+5	; 0x05
 43a:	7e 81       	ldd	r23, Y+6	; 0x06
 43c:	8f 81       	ldd	r24, Y+7	; 0x07
 43e:	98 85       	ldd	r25, Y+8	; 0x08
 440:	0e 94 09 03 	call	0x612	; 0x612 <__mulsf3>
 444:	dc 01       	movw	r26, r24
 446:	cb 01       	movw	r24, r22
 448:	89 87       	std	Y+9, r24	; 0x09
 44a:	9a 87       	std	Y+10, r25	; 0x0a
 44c:	ab 87       	std	Y+11, r26	; 0x0b
 44e:	bc 87       	std	Y+12, r27	; 0x0c
	if (__tmp < 1.0)
 450:	20 e0       	ldi	r18, 0x00	; 0
 452:	30 e0       	ldi	r19, 0x00	; 0
 454:	40 e8       	ldi	r20, 0x80	; 128
 456:	5f e3       	ldi	r21, 0x3F	; 63
 458:	69 85       	ldd	r22, Y+9	; 0x09
 45a:	7a 85       	ldd	r23, Y+10	; 0x0a
 45c:	8b 85       	ldd	r24, Y+11	; 0x0b
 45e:	9c 85       	ldd	r25, Y+12	; 0x0c
 460:	0e 94 83 02 	call	0x506	; 0x506 <__cmpsf2>
 464:	88 23       	and	r24, r24
 466:	2c f4       	brge	.+10     	; 0x472 <__EEPROM_REGION_LENGTH__+0x72>
		__ticks = 1;
 468:	81 e0       	ldi	r24, 0x01	; 1
 46a:	90 e0       	ldi	r25, 0x00	; 0
 46c:	9e 87       	std	Y+14, r25	; 0x0e
 46e:	8d 87       	std	Y+13, r24	; 0x0d
 470:	3f c0       	rjmp	.+126    	; 0x4f0 <__EEPROM_REGION_LENGTH__+0xf0>
	else if (__tmp > 65535)
 472:	20 e0       	ldi	r18, 0x00	; 0
 474:	3f ef       	ldi	r19, 0xFF	; 255
 476:	4f e7       	ldi	r20, 0x7F	; 127
 478:	57 e4       	ldi	r21, 0x47	; 71
 47a:	69 85       	ldd	r22, Y+9	; 0x09
 47c:	7a 85       	ldd	r23, Y+10	; 0x0a
 47e:	8b 85       	ldd	r24, Y+11	; 0x0b
 480:	9c 85       	ldd	r25, Y+12	; 0x0c
 482:	0e 94 04 03 	call	0x608	; 0x608 <__gesf2>
 486:	18 16       	cp	r1, r24
 488:	4c f5       	brge	.+82     	; 0x4dc <__EEPROM_REGION_LENGTH__+0xdc>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
 48a:	20 e0       	ldi	r18, 0x00	; 0
 48c:	30 e0       	ldi	r19, 0x00	; 0
 48e:	40 e2       	ldi	r20, 0x20	; 32
 490:	51 e4       	ldi	r21, 0x41	; 65
 492:	6d 81       	ldd	r22, Y+5	; 0x05
 494:	7e 81       	ldd	r23, Y+6	; 0x06
 496:	8f 81       	ldd	r24, Y+7	; 0x07
 498:	98 85       	ldd	r25, Y+8	; 0x08
 49a:	0e 94 09 03 	call	0x612	; 0x612 <__mulsf3>
 49e:	dc 01       	movw	r26, r24
 4a0:	cb 01       	movw	r24, r22
 4a2:	bc 01       	movw	r22, r24
 4a4:	cd 01       	movw	r24, r26
 4a6:	0e 94 88 02 	call	0x510	; 0x510 <__fixunssfsi>
 4aa:	dc 01       	movw	r26, r24
 4ac:	cb 01       	movw	r24, r22
 4ae:	9e 87       	std	Y+14, r25	; 0x0e
 4b0:	8d 87       	std	Y+13, r24	; 0x0d
 4b2:	0f c0       	rjmp	.+30     	; 0x4d2 <__EEPROM_REGION_LENGTH__+0xd2>
 4b4:	80 e9       	ldi	r24, 0x90	; 144
 4b6:	91 e0       	ldi	r25, 0x01	; 1
 4b8:	98 8b       	std	Y+16, r25	; 0x10
 4ba:	8f 87       	std	Y+15, r24	; 0x0f
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
 4bc:	8f 85       	ldd	r24, Y+15	; 0x0f
 4be:	98 89       	ldd	r25, Y+16	; 0x10
 4c0:	01 97       	sbiw	r24, 0x01	; 1
 4c2:	f1 f7       	brne	.-4      	; 0x4c0 <__EEPROM_REGION_LENGTH__+0xc0>
 4c4:	98 8b       	std	Y+16, r25	; 0x10
 4c6:	8f 87       	std	Y+15, r24	; 0x0f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 4c8:	8d 85       	ldd	r24, Y+13	; 0x0d
 4ca:	9e 85       	ldd	r25, Y+14	; 0x0e
 4cc:	01 97       	sbiw	r24, 0x01	; 1
 4ce:	9e 87       	std	Y+14, r25	; 0x0e
 4d0:	8d 87       	std	Y+13, r24	; 0x0d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 4d2:	8d 85       	ldd	r24, Y+13	; 0x0d
 4d4:	9e 85       	ldd	r25, Y+14	; 0x0e
 4d6:	89 2b       	or	r24, r25
 4d8:	69 f7       	brne	.-38     	; 0x4b4 <__EEPROM_REGION_LENGTH__+0xb4>
 4da:	14 c0       	rjmp	.+40     	; 0x504 <__EEPROM_REGION_LENGTH__+0x104>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
 4dc:	69 85       	ldd	r22, Y+9	; 0x09
 4de:	7a 85       	ldd	r23, Y+10	; 0x0a
 4e0:	8b 85       	ldd	r24, Y+11	; 0x0b
 4e2:	9c 85       	ldd	r25, Y+12	; 0x0c
 4e4:	0e 94 88 02 	call	0x510	; 0x510 <__fixunssfsi>
 4e8:	dc 01       	movw	r26, r24
 4ea:	cb 01       	movw	r24, r22
 4ec:	9e 87       	std	Y+14, r25	; 0x0e
 4ee:	8d 87       	std	Y+13, r24	; 0x0d
 4f0:	8d 85       	ldd	r24, Y+13	; 0x0d
 4f2:	9e 85       	ldd	r25, Y+14	; 0x0e
 4f4:	9a 8b       	std	Y+18, r25	; 0x12
 4f6:	89 8b       	std	Y+17, r24	; 0x11
 4f8:	89 89       	ldd	r24, Y+17	; 0x11
 4fa:	9a 89       	ldd	r25, Y+18	; 0x12
 4fc:	01 97       	sbiw	r24, 0x01	; 1
 4fe:	f1 f7       	brne	.-4      	; 0x4fc <__EEPROM_REGION_LENGTH__+0xfc>
 500:	9a 8b       	std	Y+18, r25	; 0x12
 502:	89 8b       	std	Y+17, r24	; 0x11
		
		_delay_ms(100);		
		
    }
 504:	4a cf       	rjmp	.-364    	; 0x39a <main+0x1c>

00000506 <__cmpsf2>:
 506:	0e 94 b7 02 	call	0x56e	; 0x56e <__fp_cmp>
 50a:	08 f4       	brcc	.+2      	; 0x50e <__cmpsf2+0x8>
 50c:	81 e0       	ldi	r24, 0x01	; 1
 50e:	08 95       	ret

00000510 <__fixunssfsi>:
 510:	0e 94 e3 02 	call	0x5c6	; 0x5c6 <__fp_splitA>
 514:	88 f0       	brcs	.+34     	; 0x538 <__fixunssfsi+0x28>
 516:	9f 57       	subi	r25, 0x7F	; 127
 518:	98 f0       	brcs	.+38     	; 0x540 <__fixunssfsi+0x30>
 51a:	b9 2f       	mov	r27, r25
 51c:	99 27       	eor	r25, r25
 51e:	b7 51       	subi	r27, 0x17	; 23
 520:	b0 f0       	brcs	.+44     	; 0x54e <__fixunssfsi+0x3e>
 522:	e1 f0       	breq	.+56     	; 0x55c <__fixunssfsi+0x4c>
 524:	66 0f       	add	r22, r22
 526:	77 1f       	adc	r23, r23
 528:	88 1f       	adc	r24, r24
 52a:	99 1f       	adc	r25, r25
 52c:	1a f0       	brmi	.+6      	; 0x534 <__fixunssfsi+0x24>
 52e:	ba 95       	dec	r27
 530:	c9 f7       	brne	.-14     	; 0x524 <__fixunssfsi+0x14>
 532:	14 c0       	rjmp	.+40     	; 0x55c <__fixunssfsi+0x4c>
 534:	b1 30       	cpi	r27, 0x01	; 1
 536:	91 f0       	breq	.+36     	; 0x55c <__fixunssfsi+0x4c>
 538:	0e 94 fd 02 	call	0x5fa	; 0x5fa <__fp_zero>
 53c:	b1 e0       	ldi	r27, 0x01	; 1
 53e:	08 95       	ret
 540:	0c 94 fd 02 	jmp	0x5fa	; 0x5fa <__fp_zero>
 544:	67 2f       	mov	r22, r23
 546:	78 2f       	mov	r23, r24
 548:	88 27       	eor	r24, r24
 54a:	b8 5f       	subi	r27, 0xF8	; 248
 54c:	39 f0       	breq	.+14     	; 0x55c <__fixunssfsi+0x4c>
 54e:	b9 3f       	cpi	r27, 0xF9	; 249
 550:	cc f3       	brlt	.-14     	; 0x544 <__fixunssfsi+0x34>
 552:	86 95       	lsr	r24
 554:	77 95       	ror	r23
 556:	67 95       	ror	r22
 558:	b3 95       	inc	r27
 55a:	d9 f7       	brne	.-10     	; 0x552 <__fixunssfsi+0x42>
 55c:	3e f4       	brtc	.+14     	; 0x56c <__fixunssfsi+0x5c>
 55e:	90 95       	com	r25
 560:	80 95       	com	r24
 562:	70 95       	com	r23
 564:	61 95       	neg	r22
 566:	7f 4f       	sbci	r23, 0xFF	; 255
 568:	8f 4f       	sbci	r24, 0xFF	; 255
 56a:	9f 4f       	sbci	r25, 0xFF	; 255
 56c:	08 95       	ret

0000056e <__fp_cmp>:
 56e:	99 0f       	add	r25, r25
 570:	00 08       	sbc	r0, r0
 572:	55 0f       	add	r21, r21
 574:	aa 0b       	sbc	r26, r26
 576:	e0 e8       	ldi	r30, 0x80	; 128
 578:	fe ef       	ldi	r31, 0xFE	; 254
 57a:	16 16       	cp	r1, r22
 57c:	17 06       	cpc	r1, r23
 57e:	e8 07       	cpc	r30, r24
 580:	f9 07       	cpc	r31, r25
 582:	c0 f0       	brcs	.+48     	; 0x5b4 <__fp_cmp+0x46>
 584:	12 16       	cp	r1, r18
 586:	13 06       	cpc	r1, r19
 588:	e4 07       	cpc	r30, r20
 58a:	f5 07       	cpc	r31, r21
 58c:	98 f0       	brcs	.+38     	; 0x5b4 <__fp_cmp+0x46>
 58e:	62 1b       	sub	r22, r18
 590:	73 0b       	sbc	r23, r19
 592:	84 0b       	sbc	r24, r20
 594:	95 0b       	sbc	r25, r21
 596:	39 f4       	brne	.+14     	; 0x5a6 <__fp_cmp+0x38>
 598:	0a 26       	eor	r0, r26
 59a:	61 f0       	breq	.+24     	; 0x5b4 <__fp_cmp+0x46>
 59c:	23 2b       	or	r18, r19
 59e:	24 2b       	or	r18, r20
 5a0:	25 2b       	or	r18, r21
 5a2:	21 f4       	brne	.+8      	; 0x5ac <__fp_cmp+0x3e>
 5a4:	08 95       	ret
 5a6:	0a 26       	eor	r0, r26
 5a8:	09 f4       	brne	.+2      	; 0x5ac <__fp_cmp+0x3e>
 5aa:	a1 40       	sbci	r26, 0x01	; 1
 5ac:	a6 95       	lsr	r26
 5ae:	8f ef       	ldi	r24, 0xFF	; 255
 5b0:	81 1d       	adc	r24, r1
 5b2:	81 1d       	adc	r24, r1
 5b4:	08 95       	ret

000005b6 <__fp_split3>:
 5b6:	57 fd       	sbrc	r21, 7
 5b8:	90 58       	subi	r25, 0x80	; 128
 5ba:	44 0f       	add	r20, r20
 5bc:	55 1f       	adc	r21, r21
 5be:	59 f0       	breq	.+22     	; 0x5d6 <__fp_splitA+0x10>
 5c0:	5f 3f       	cpi	r21, 0xFF	; 255
 5c2:	71 f0       	breq	.+28     	; 0x5e0 <__fp_splitA+0x1a>
 5c4:	47 95       	ror	r20

000005c6 <__fp_splitA>:
 5c6:	88 0f       	add	r24, r24
 5c8:	97 fb       	bst	r25, 7
 5ca:	99 1f       	adc	r25, r25
 5cc:	61 f0       	breq	.+24     	; 0x5e6 <__fp_splitA+0x20>
 5ce:	9f 3f       	cpi	r25, 0xFF	; 255
 5d0:	79 f0       	breq	.+30     	; 0x5f0 <__fp_splitA+0x2a>
 5d2:	87 95       	ror	r24
 5d4:	08 95       	ret
 5d6:	12 16       	cp	r1, r18
 5d8:	13 06       	cpc	r1, r19
 5da:	14 06       	cpc	r1, r20
 5dc:	55 1f       	adc	r21, r21
 5de:	f2 cf       	rjmp	.-28     	; 0x5c4 <__fp_split3+0xe>
 5e0:	46 95       	lsr	r20
 5e2:	f1 df       	rcall	.-30     	; 0x5c6 <__fp_splitA>
 5e4:	08 c0       	rjmp	.+16     	; 0x5f6 <__fp_splitA+0x30>
 5e6:	16 16       	cp	r1, r22
 5e8:	17 06       	cpc	r1, r23
 5ea:	18 06       	cpc	r1, r24
 5ec:	99 1f       	adc	r25, r25
 5ee:	f1 cf       	rjmp	.-30     	; 0x5d2 <__fp_splitA+0xc>
 5f0:	86 95       	lsr	r24
 5f2:	71 05       	cpc	r23, r1
 5f4:	61 05       	cpc	r22, r1
 5f6:	08 94       	sec
 5f8:	08 95       	ret

000005fa <__fp_zero>:
 5fa:	e8 94       	clt

000005fc <__fp_szero>:
 5fc:	bb 27       	eor	r27, r27
 5fe:	66 27       	eor	r22, r22
 600:	77 27       	eor	r23, r23
 602:	cb 01       	movw	r24, r22
 604:	97 f9       	bld	r25, 7
 606:	08 95       	ret

00000608 <__gesf2>:
 608:	0e 94 b7 02 	call	0x56e	; 0x56e <__fp_cmp>
 60c:	08 f4       	brcc	.+2      	; 0x610 <__gesf2+0x8>
 60e:	8f ef       	ldi	r24, 0xFF	; 255
 610:	08 95       	ret

00000612 <__mulsf3>:
 612:	0e 94 1c 03 	call	0x638	; 0x638 <__mulsf3x>
 616:	0c 94 8d 03 	jmp	0x71a	; 0x71a <__fp_round>
 61a:	0e 94 7f 03 	call	0x6fe	; 0x6fe <__fp_pscA>
 61e:	38 f0       	brcs	.+14     	; 0x62e <__mulsf3+0x1c>
 620:	0e 94 86 03 	call	0x70c	; 0x70c <__fp_pscB>
 624:	20 f0       	brcs	.+8      	; 0x62e <__mulsf3+0x1c>
 626:	95 23       	and	r25, r21
 628:	11 f0       	breq	.+4      	; 0x62e <__mulsf3+0x1c>
 62a:	0c 94 76 03 	jmp	0x6ec	; 0x6ec <__fp_inf>
 62e:	0c 94 7c 03 	jmp	0x6f8	; 0x6f8 <__fp_nan>
 632:	11 24       	eor	r1, r1
 634:	0c 94 fe 02 	jmp	0x5fc	; 0x5fc <__fp_szero>

00000638 <__mulsf3x>:
 638:	0e 94 db 02 	call	0x5b6	; 0x5b6 <__fp_split3>
 63c:	70 f3       	brcs	.-36     	; 0x61a <__mulsf3+0x8>

0000063e <__mulsf3_pse>:
 63e:	95 9f       	mul	r25, r21
 640:	c1 f3       	breq	.-16     	; 0x632 <__mulsf3+0x20>
 642:	95 0f       	add	r25, r21
 644:	50 e0       	ldi	r21, 0x00	; 0
 646:	55 1f       	adc	r21, r21
 648:	62 9f       	mul	r22, r18
 64a:	f0 01       	movw	r30, r0
 64c:	72 9f       	mul	r23, r18
 64e:	bb 27       	eor	r27, r27
 650:	f0 0d       	add	r31, r0
 652:	b1 1d       	adc	r27, r1
 654:	63 9f       	mul	r22, r19
 656:	aa 27       	eor	r26, r26
 658:	f0 0d       	add	r31, r0
 65a:	b1 1d       	adc	r27, r1
 65c:	aa 1f       	adc	r26, r26
 65e:	64 9f       	mul	r22, r20
 660:	66 27       	eor	r22, r22
 662:	b0 0d       	add	r27, r0
 664:	a1 1d       	adc	r26, r1
 666:	66 1f       	adc	r22, r22
 668:	82 9f       	mul	r24, r18
 66a:	22 27       	eor	r18, r18
 66c:	b0 0d       	add	r27, r0
 66e:	a1 1d       	adc	r26, r1
 670:	62 1f       	adc	r22, r18
 672:	73 9f       	mul	r23, r19
 674:	b0 0d       	add	r27, r0
 676:	a1 1d       	adc	r26, r1
 678:	62 1f       	adc	r22, r18
 67a:	83 9f       	mul	r24, r19
 67c:	a0 0d       	add	r26, r0
 67e:	61 1d       	adc	r22, r1
 680:	22 1f       	adc	r18, r18
 682:	74 9f       	mul	r23, r20
 684:	33 27       	eor	r19, r19
 686:	a0 0d       	add	r26, r0
 688:	61 1d       	adc	r22, r1
 68a:	23 1f       	adc	r18, r19
 68c:	84 9f       	mul	r24, r20
 68e:	60 0d       	add	r22, r0
 690:	21 1d       	adc	r18, r1
 692:	82 2f       	mov	r24, r18
 694:	76 2f       	mov	r23, r22
 696:	6a 2f       	mov	r22, r26
 698:	11 24       	eor	r1, r1
 69a:	9f 57       	subi	r25, 0x7F	; 127
 69c:	50 40       	sbci	r21, 0x00	; 0
 69e:	9a f0       	brmi	.+38     	; 0x6c6 <__mulsf3_pse+0x88>
 6a0:	f1 f0       	breq	.+60     	; 0x6de <__mulsf3_pse+0xa0>
 6a2:	88 23       	and	r24, r24
 6a4:	4a f0       	brmi	.+18     	; 0x6b8 <__mulsf3_pse+0x7a>
 6a6:	ee 0f       	add	r30, r30
 6a8:	ff 1f       	adc	r31, r31
 6aa:	bb 1f       	adc	r27, r27
 6ac:	66 1f       	adc	r22, r22
 6ae:	77 1f       	adc	r23, r23
 6b0:	88 1f       	adc	r24, r24
 6b2:	91 50       	subi	r25, 0x01	; 1
 6b4:	50 40       	sbci	r21, 0x00	; 0
 6b6:	a9 f7       	brne	.-22     	; 0x6a2 <__mulsf3_pse+0x64>
 6b8:	9e 3f       	cpi	r25, 0xFE	; 254
 6ba:	51 05       	cpc	r21, r1
 6bc:	80 f0       	brcs	.+32     	; 0x6de <__mulsf3_pse+0xa0>
 6be:	0c 94 76 03 	jmp	0x6ec	; 0x6ec <__fp_inf>
 6c2:	0c 94 fe 02 	jmp	0x5fc	; 0x5fc <__fp_szero>
 6c6:	5f 3f       	cpi	r21, 0xFF	; 255
 6c8:	e4 f3       	brlt	.-8      	; 0x6c2 <__mulsf3_pse+0x84>
 6ca:	98 3e       	cpi	r25, 0xE8	; 232
 6cc:	d4 f3       	brlt	.-12     	; 0x6c2 <__mulsf3_pse+0x84>
 6ce:	86 95       	lsr	r24
 6d0:	77 95       	ror	r23
 6d2:	67 95       	ror	r22
 6d4:	b7 95       	ror	r27
 6d6:	f7 95       	ror	r31
 6d8:	e7 95       	ror	r30
 6da:	9f 5f       	subi	r25, 0xFF	; 255
 6dc:	c1 f7       	brne	.-16     	; 0x6ce <__mulsf3_pse+0x90>
 6de:	fe 2b       	or	r31, r30
 6e0:	88 0f       	add	r24, r24
 6e2:	91 1d       	adc	r25, r1
 6e4:	96 95       	lsr	r25
 6e6:	87 95       	ror	r24
 6e8:	97 f9       	bld	r25, 7
 6ea:	08 95       	ret

000006ec <__fp_inf>:
 6ec:	97 f9       	bld	r25, 7
 6ee:	9f 67       	ori	r25, 0x7F	; 127
 6f0:	80 e8       	ldi	r24, 0x80	; 128
 6f2:	70 e0       	ldi	r23, 0x00	; 0
 6f4:	60 e0       	ldi	r22, 0x00	; 0
 6f6:	08 95       	ret

000006f8 <__fp_nan>:
 6f8:	9f ef       	ldi	r25, 0xFF	; 255
 6fa:	80 ec       	ldi	r24, 0xC0	; 192
 6fc:	08 95       	ret

000006fe <__fp_pscA>:
 6fe:	00 24       	eor	r0, r0
 700:	0a 94       	dec	r0
 702:	16 16       	cp	r1, r22
 704:	17 06       	cpc	r1, r23
 706:	18 06       	cpc	r1, r24
 708:	09 06       	cpc	r0, r25
 70a:	08 95       	ret

0000070c <__fp_pscB>:
 70c:	00 24       	eor	r0, r0
 70e:	0a 94       	dec	r0
 710:	12 16       	cp	r1, r18
 712:	13 06       	cpc	r1, r19
 714:	14 06       	cpc	r1, r20
 716:	05 06       	cpc	r0, r21
 718:	08 95       	ret

0000071a <__fp_round>:
 71a:	09 2e       	mov	r0, r25
 71c:	03 94       	inc	r0
 71e:	00 0c       	add	r0, r0
 720:	11 f4       	brne	.+4      	; 0x726 <__fp_round+0xc>
 722:	88 23       	and	r24, r24
 724:	52 f0       	brmi	.+20     	; 0x73a <__fp_round+0x20>
 726:	bb 0f       	add	r27, r27
 728:	40 f4       	brcc	.+16     	; 0x73a <__fp_round+0x20>
 72a:	bf 2b       	or	r27, r31
 72c:	11 f4       	brne	.+4      	; 0x732 <__fp_round+0x18>
 72e:	60 ff       	sbrs	r22, 0
 730:	04 c0       	rjmp	.+8      	; 0x73a <__fp_round+0x20>
 732:	6f 5f       	subi	r22, 0xFF	; 255
 734:	7f 4f       	sbci	r23, 0xFF	; 255
 736:	8f 4f       	sbci	r24, 0xFF	; 255
 738:	9f 4f       	sbci	r25, 0xFF	; 255
 73a:	08 95       	ret

0000073c <__muluhisi3>:
 73c:	0e 94 a9 03 	call	0x752	; 0x752 <__umulhisi3>
 740:	a5 9f       	mul	r26, r21
 742:	90 0d       	add	r25, r0
 744:	b4 9f       	mul	r27, r20
 746:	90 0d       	add	r25, r0
 748:	a4 9f       	mul	r26, r20
 74a:	80 0d       	add	r24, r0
 74c:	91 1d       	adc	r25, r1
 74e:	11 24       	eor	r1, r1
 750:	08 95       	ret

00000752 <__umulhisi3>:
 752:	a2 9f       	mul	r26, r18
 754:	b0 01       	movw	r22, r0
 756:	b3 9f       	mul	r27, r19
 758:	c0 01       	movw	r24, r0
 75a:	a3 9f       	mul	r26, r19
 75c:	70 0d       	add	r23, r0
 75e:	81 1d       	adc	r24, r1
 760:	11 24       	eor	r1, r1
 762:	91 1d       	adc	r25, r1
 764:	b2 9f       	mul	r27, r18
 766:	70 0d       	add	r23, r0
 768:	81 1d       	adc	r24, r1
 76a:	11 24       	eor	r1, r1
 76c:	91 1d       	adc	r25, r1
 76e:	08 95       	ret

00000770 <ltoa>:
 770:	25 32       	cpi	r18, 0x25	; 37
 772:	31 05       	cpc	r19, r1
 774:	20 f4       	brcc	.+8      	; 0x77e <ltoa+0xe>
 776:	22 30       	cpi	r18, 0x02	; 2
 778:	10 f0       	brcs	.+4      	; 0x77e <ltoa+0xe>
 77a:	0c 94 c3 03 	jmp	0x786	; 0x786 <__ltoa_ncheck>
 77e:	fa 01       	movw	r30, r20
 780:	10 82       	st	Z, r1
 782:	ca 01       	movw	r24, r20
 784:	08 95       	ret

00000786 <__ltoa_ncheck>:
 786:	bb 27       	eor	r27, r27
 788:	2a 30       	cpi	r18, 0x0A	; 10
 78a:	51 f4       	brne	.+20     	; 0x7a0 <__ltoa_ncheck+0x1a>
 78c:	99 23       	and	r25, r25
 78e:	42 f4       	brpl	.+16     	; 0x7a0 <__ltoa_ncheck+0x1a>
 790:	bd e2       	ldi	r27, 0x2D	; 45
 792:	90 95       	com	r25
 794:	80 95       	com	r24
 796:	70 95       	com	r23
 798:	61 95       	neg	r22
 79a:	7f 4f       	sbci	r23, 0xFF	; 255
 79c:	8f 4f       	sbci	r24, 0xFF	; 255
 79e:	9f 4f       	sbci	r25, 0xFF	; 255
 7a0:	0c 94 d3 03 	jmp	0x7a6	; 0x7a6 <__ultoa_common>

000007a4 <__ultoa_ncheck>:
 7a4:	bb 27       	eor	r27, r27

000007a6 <__ultoa_common>:
 7a6:	fa 01       	movw	r30, r20
 7a8:	a6 2f       	mov	r26, r22
 7aa:	62 17       	cp	r22, r18
 7ac:	71 05       	cpc	r23, r1
 7ae:	81 05       	cpc	r24, r1
 7b0:	91 05       	cpc	r25, r1
 7b2:	33 0b       	sbc	r19, r19
 7b4:	30 fb       	bst	r19, 0
 7b6:	66 f0       	brts	.+24     	; 0x7d0 <__ultoa_common+0x2a>
 7b8:	aa 27       	eor	r26, r26
 7ba:	66 0f       	add	r22, r22
 7bc:	77 1f       	adc	r23, r23
 7be:	88 1f       	adc	r24, r24
 7c0:	99 1f       	adc	r25, r25
 7c2:	aa 1f       	adc	r26, r26
 7c4:	a2 17       	cp	r26, r18
 7c6:	10 f0       	brcs	.+4      	; 0x7cc <__ultoa_common+0x26>
 7c8:	a2 1b       	sub	r26, r18
 7ca:	63 95       	inc	r22
 7cc:	38 50       	subi	r19, 0x08	; 8
 7ce:	a9 f7       	brne	.-22     	; 0x7ba <__ultoa_common+0x14>
 7d0:	a0 5d       	subi	r26, 0xD0	; 208
 7d2:	aa 33       	cpi	r26, 0x3A	; 58
 7d4:	08 f0       	brcs	.+2      	; 0x7d8 <__ultoa_common+0x32>
 7d6:	a9 5d       	subi	r26, 0xD9	; 217
 7d8:	a1 93       	st	Z+, r26
 7da:	36 f7       	brtc	.-52     	; 0x7a8 <__ultoa_common+0x2>
 7dc:	b1 11       	cpse	r27, r1
 7de:	b1 93       	st	Z+, r27
 7e0:	10 82       	st	Z, r1
 7e2:	ca 01       	movw	r24, r20
 7e4:	0c 94 f4 03 	jmp	0x7e8	; 0x7e8 <strrev>

000007e8 <strrev>:
 7e8:	dc 01       	movw	r26, r24
 7ea:	fc 01       	movw	r30, r24
 7ec:	67 2f       	mov	r22, r23
 7ee:	71 91       	ld	r23, Z+
 7f0:	77 23       	and	r23, r23
 7f2:	e1 f7       	brne	.-8      	; 0x7ec <strrev+0x4>
 7f4:	32 97       	sbiw	r30, 0x02	; 2
 7f6:	04 c0       	rjmp	.+8      	; 0x800 <__DATA_REGION_LENGTH__>
 7f8:	7c 91       	ld	r23, X
 7fa:	6d 93       	st	X+, r22
 7fc:	70 83       	st	Z, r23
 7fe:	62 91       	ld	r22, -Z
 800:	ae 17       	cp	r26, r30
 802:	bf 07       	cpc	r27, r31
 804:	c8 f3       	brcs	.-14     	; 0x7f8 <strrev+0x10>
 806:	08 95       	ret

00000808 <_exit>:
 808:	f8 94       	cli

0000080a <__stop_program>:
 80a:	ff cf       	rjmp	.-2      	; 0x80a <__stop_program>
